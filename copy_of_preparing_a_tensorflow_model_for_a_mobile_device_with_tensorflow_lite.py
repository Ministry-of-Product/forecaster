# -*- coding: utf-8 -*-
"""Copy of Preparing a TensorFlow model for a mobile device with TensorFlow Lite.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TtksULj7lsUZYsu5O3Kh3WXRSHNI2XOk

## Stage 1: Installing dependencies and setting up the environment
"""

#!pip install tensorflow-gpu==1.13.1

"""## Stage 2: Importing project dependencies"""

import tensorflow as tf
import numpy as np

from tensorflow.keras.datasets import fashion_mnist

tf.__version__

"""## Stage 3: Dataset preprocessing

### Loading the FashionMNIST dataset
"""

(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()

"""### Image normalization"""

X_train = X_train / 255.
X_test = X_test / 255.

"""### Reshaping of the dataset"""

X_train.shape

X_train = X_train.reshape(-1, 28*28)
X_test = X_test.reshape(-1, 28*28)

X_train.shape

"""## Stage 4: Building a model

### Defining the model
"""

model = tf.keras.models.Sequential()

"""### Building the model"""

model.add(tf.keras.layers.Dense(units=128, activation='relu', input_shape=(784,)))
model.add(tf.keras.layers.Dropout(rate=0.2))
model.add(tf.keras.layers.Dense(units=10, activation='softmax'))

"""### Compiling the model"""

model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['sparse_categorical_accuracy'])

"""### Training the model"""

model.fit(X_train, y_train, epochs=5)

"""### Evaluating the model"""

test_loss, test_accuracy = model.evaluate(X_test, y_test)
print("Test accuracy: {}".format(test_accuracy))

"""## Stage 5: Converting the model into TensorFlow Lite version

### Saving the model
"""

model_name = 'fashion_mobile_model.h5'
tf.keras.models.save_model(model, model_name)

"""### Creating the TFLite Converter"""

converter = tf.lite.TFLiteConverter.from_keras_model_file(model_name)

"""### Converting the model"""

tflite_model = converter.convert()

"""### Saving the TFLite version of the model"""

with open("tf_model.tflite", "wb") as f:
  f.write(tflite_model)

